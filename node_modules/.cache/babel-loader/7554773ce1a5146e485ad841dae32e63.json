{"ast":null,"code":"import _classCallCheck from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/korlandi/42/hypertube/src/components/search/Search.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Typography, Grid } from '@material-ui/core';\nimport Loading from '../../utils/jsx/Loading';\nimport { withStyles } from '@material-ui/core/styles'; // import { fetchMovies, fetchAddMovies } from '../../redux/search/actions'\n\nimport { Link } from 'react-router-dom';\nimport Sort from './Sort';\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this._isMounted = false;\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props = this.props,\n          search = _this$props.search,\n          dispatch = _this$props.dispatch;\n      if (search.movies.length === 0 && search.word === '') dispatch(fetchMovies());\n      dispatch(fetch);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var dispatch = this.props.dispatch;\n      this._isMounted = true;\n\n      window.onscroll = function () {\n        if (_this2._isMounted === true) {\n          if (window.innerHeight + document.documentElement.scrollTop > document.documentElement.offsetHeight - 200) dispatch(fetchAddMovies());\n        }\n      };\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$search = this.props.search,\n          movies = _this$props$search.movies,\n          isFetching = _this$props$search.isFetching;\n      var classes = this.props.classes;\n      var locale = this.props.locales.locale;\n      return React.createElement(Grid, {\n        container: true,\n        spacing: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Sort, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, movies.length === 0 && !isFetching && React.createElement(Typography, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, locale.search.no_results), React.createElement(Grid, {\n        container: true,\n        spacing: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, movies.map(function (movie) {\n        return React.createElement(Grid, {\n          key: movie.id,\n          item: true,\n          xs: 6,\n          sm: 3,\n          md: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: '/movie/' + movie.id,\n          style: {\n            textDecoration: 'none'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: classes.movie,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: movie.image,\n          alt: movie.title,\n          width: \"100%\",\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }))));\n      })), React.createElement(Loading, {\n        display: isFetching,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nvar styles = {\n  movie: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#222',\n    borderRadius: '3px',\n    overflow: 'hidden',\n    display: 'flex',\n    alignItems: 'center',\n    '@global': {\n      'img': {\n        fontFamily: 'Roboto, Arial',\n        color: 'rgba(255,255,255,0.9)'\n      }\n    }\n  },\n  progress: {\n    marginTop: '20px',\n    display: 'flex',\n    justifyContent: 'center'\n  }\n};\nvar SearchExport = Search;\nSearchExport = withStyles(styles)(SearchExport);\nSearchExport = connect(mapStateToProps)(SearchExport);\nexport default SearchExport;","map":{"version":3,"sources":["/Users/korlandi/42/hypertube/src/components/search/Search.jsx"],"names":["React","Component","connect","Typography","Grid","Loading","withStyles","Link","Sort","Search","_isMounted","props","search","dispatch","movies","length","word","fetchMovies","fetch","window","onscroll","innerHeight","document","documentElement","scrollTop","offsetHeight","fetchAddMovies","isFetching","classes","locale","locales","no_results","map","movie","id","textDecoration","image","title","textAlign","mapStateToProps","state","styles","width","height","backgroundColor","borderRadius","overflow","display","alignItems","fontFamily","color","progress","marginTop","justifyContent","SearchExport"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Typography, Grid } from '@material-ui/core'\nimport Loading from '../../utils/jsx/Loading'\nimport { withStyles } from '@material-ui/core/styles'\n// import { fetchMovies, fetchAddMovies } from '../../redux/search/actions'\nimport { Link } from 'react-router-dom'\nimport Sort from './Sort'\n\nclass Search extends Component {\n\n  _isMounted = false\n\n  componentWillMount() {\n    const { search, dispatch } = this.props\n    if (search.movies.length === 0 && search.word === '')\n      dispatch(fetchMovies())\n      dispatch(fetch)\n  }\n\n  componentDidMount() {\n    const { dispatch } = this.props\n    this._isMounted = true\n    window.onscroll = () => {\n      if (this._isMounted === true) {\n        if (window.innerHeight + document.documentElement.scrollTop > document.documentElement.offsetHeight - 200)\n          dispatch(fetchAddMovies())\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  render() {\n    const { movies, isFetching } = this.props.search\n    const { classes } = this.props\n    const { locale } = this.props.locales\n    return (\n      <Grid container spacing={8}>\n        <Grid item xs={12}>\n          <Sort />\n        </Grid>\n        <Grid item xs={12}>\n          {movies.length === 0 && !isFetching && <Typography align=\"center\">{locale.search.no_results}</Typography>}\n          <Grid container spacing={8}>\n            {movies.map(movie => {\n              return (\n                <Grid key={movie.id} item xs={6} sm={3} md={2}>\n                  <Link to={'/movie/' + movie.id} style={{textDecoration: 'none'}}>\n                    <div className={classes.movie}>\n                      <img src={movie.image} alt={movie.title} width=\"100%\" style={{textAlign:'center'}}/>\n                    </div>\n                  </Link>\n                </Grid>\n              )\n            })}\n          </Grid>\n          <Loading display={isFetching}/>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = state => { return state }\nconst styles = {\n  movie: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#222',\n    borderRadius: '3px',\n    overflow: 'hidden',\n    display: 'flex',\n    alignItems: 'center',\n    '@global' : {\n      'img' : {\n        fontFamily: 'Roboto, Arial',\n        color: 'rgba(255,255,255,0.9)',\n      }\n    }\n  },\n  progress: {\n    marginTop: '20px',\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}\nlet SearchExport = Search\nSearchExport = withStyles(styles)(SearchExport)\nSearchExport = connect(mapStateToProps)(SearchExport)\n\nexport default SearchExport\n"]},"metadata":{},"sourceType":"module"}