{"ast":null,"code":"import _defineProperty from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/korlandi/42/hypertube/src/components/comments/CommentsBox.jsx\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport Loading from '../../utils/jsx/Loading';\nimport TextField from '@material-ui/core/TextField';\nimport req from '../../utils/req';\nimport host from '../../config';\n\nvar CommentsBox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CommentsBox, _React$Component);\n\n  function CommentsBox() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CommentsBox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CommentsBox)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isFetching: false,\n      comment: ''\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.setState(_objectSpread({}, _this.state, {\n        isFetching: true\n      }));\n\n      console.log(_this.props.auth.user.id);\n      req(host + \"/api/messages\", {\n        useToken: true,\n        method: \"POST\",\n        body: {\n          owner: '/api/users/' + _this.props.auth.user.id,\n          message: _this.state.comment,\n          movie: '/api/movies/' + _this.props.id\n        }\n      }).then(function (res) {\n        // Handle api response\n        // faire un setState\n        console.log(res);\n\n        _this.props.fetchComments();\n      }).catch(function (err) {\n        console.error(err); // Handle errors\n      });\n    };\n\n    _this.onChange = function (e) {\n      var name = e.target.name;\n\n      _this.setState(_objectSpread({}, _this.state, _defineProperty({}, name, e.target.value)));\n    };\n\n    return _this;\n  }\n\n  _createClass(CommentsBox, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isFetching = _this$state.isFetching,\n          comment = _this$state.comment;\n      var locale = this.props.locales.locale;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Loading, {\n        display: isFetching,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.fetchComments,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        name: \"comment\",\n        label: locale.movie.comment,\n        onChange: this.onChange,\n        margin: \"normal\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CommentsBox;\n}(React.Component);\n\nvar styles = function styles(theme) {\n  return {\n    img: {\n      borderRadius: '5px',\n      overflow: 'hidden'\n    },\n    paper: {\n      background: theme.palette.secondary.dark,\n      height: '100%',\n      borderRadius: '5px',\n      padding: '15px 20px',\n      overflow: 'hidden'\n    },\n    frame: {\n      margin: '0 -20px -19px -20px',\n      width: 'calc(100% + 40px)',\n      height: '20vw',\n      minHeight: '250px'\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nvar CommentsBoxExport = CommentsBox;\nCommentsBoxExport = withStyles(styles)(CommentsBoxExport);\nCommentsBoxExport = connect(mapStateToProps)(CommentsBoxExport);\nexport default CommentsBoxExport;","map":{"version":3,"sources":["/Users/korlandi/42/hypertube/src/components/comments/CommentsBox.jsx"],"names":["React","withStyles","connect","Loading","TextField","req","host","CommentsBox","state","isFetching","comment","handleSubmit","e","preventDefault","setState","console","log","props","auth","user","id","useToken","method","body","owner","message","movie","then","res","fetchComments","catch","err","error","onChange","name","target","value","locale","locales","Component","styles","theme","img","borderRadius","overflow","paper","background","palette","secondary","dark","height","padding","frame","margin","width","minHeight","mapStateToProps","CommentsBoxExport"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { connect } from 'react-redux'\nimport Loading from '../../utils/jsx/Loading'\nimport TextField from '@material-ui/core/TextField';\nimport req from '../../utils/req'\nimport host from '../../config'\n\nclass CommentsBox extends React.Component {\n\n  state = {\n    isFetching: false,\n    comment: ''\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.setState({...this.state, isFetching: true})\n    console.log(this.props.auth.user.id)\n    req(host + \"/api/messages\", {\n        useToken: true,\n        method: \"POST\",\n        body: {\n              owner: '/api/users/' + this.props.auth.user.id,\n              message: this.state.comment,\n              movie: '/api/movies/' + this.props.id,\n          }\n        }).then(res => {\n          // Handle api response\n          // faire un setState\n          console.log(res)\n          this.props.fetchComments()\n        }).catch(err => {\n          console.error(err)\n          // Handle errors\n        })\n  }\n\n  onChange = (e) => {\n    let name = e.target.name\n    this.setState({\n      ...this.state,\n      [name]: e.target.value\n    })\n  }\n\n\n  render() {\n    const { isFetching, comment } = this.state\n    const { locale } = this.props.locales\n\n    return (\n      <div>\n        <Loading display={isFetching}/>\n        <form onSubmit={this.fetchComments}>\n          <TextField\n              name=\"comment\"\n              label={locale.movie.comment}\n              onChange={this.onChange}\n              margin=\"normal\"\n              fullWidth\n          />\n        </form>\n      </div>\n    )\n  }\n}\n\nconst styles = theme => ({\n  img: {\n    borderRadius:'5px',\n    overflow:'hidden'\n  },\n  paper: {\n    background: theme.palette.secondary.dark,\n    height:'100%',\n    borderRadius: '5px',\n    padding:'15px 20px',\n    overflow:'hidden'\n  },\n  frame: {\n    margin: '0 -20px -19px -20px',\n    width: 'calc(100% + 40px)',\n    height: '20vw',\n    minHeight: '250px'\n  }\n})\nconst mapStateToProps = state => { return state }\nlet CommentsBoxExport = CommentsBox\nCommentsBoxExport = withStyles(styles)(CommentsBoxExport)\nCommentsBoxExport = connect(mapStateToProps)(CommentsBoxExport)\nexport default CommentsBoxExport\n"]},"metadata":{},"sourceType":"module"}