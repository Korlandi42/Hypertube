{"ast":null,"code":"import _regeneratorRuntime from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/korlandi/42/hypertube/src/components/movie/Movie.jsx\";\nimport React from 'react';\nimport { Typography, Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport Icon from '@material-ui/core/Icon';\nimport Loading from '../../utils/jsx/Loading';\nimport req from '../../utils/req';\nimport host from '../../config';\nimport Torrents from './Torrents';\n\nvar Movie =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Movie, _React$Component);\n\n  function Movie() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Movie);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Movie)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this._isMounted = false;\n\n    _this.setStateCheck = function (state, callback) {\n      if (_this._isMounted === true) {\n        _this.setState(state, function () {\n          if (callback) callback();\n        });\n      }\n    };\n\n    _this.state = {\n      movie: {\n        genres: [],\n        torrents: []\n      },\n      isFetching: false\n    };\n\n    _this.pad = function (nbr) {\n      return nbr > 0 && nbr < 10 ? '0' + nbr : nbr;\n    };\n\n    _this.parseTorrents = function (torrents) {\n      var ret = [];\n      console.log(torrents);\n\n      for (var k in torrents) {\n        ret.push(torrents[k]);\n        ret[ret.length - 1].quality = k;\n        ret[ret.length - 1].size = torrents[k].filesize;\n        ret[ret.length - 1].magnet = torrents[k].url;\n      }\n\n      return ret;\n    };\n\n    _this.fetchMovieStatuse = function (id) {\n      _this.setStateCheck(_objectSpread({}, _this.state, {\n        isFetching: true\n      })); // req(host + '/api/movie_statuses/' + id)\n      // .then(res => {\n      //   console.log(res)\n      // })\n\n    };\n\n    _this.fetchMovie = function (id) {\n      if (id[0] === 't') {\n        _this.setStateCheck(_objectSpread({}, _this.state, {\n          isFetching: true\n        }));\n\n        req('https://tv-v2.api-fetch.website/movie/' + id).then(function (res) {\n          _this.setStateCheck({\n            isFetching: false,\n            movie: {\n              image: res.images.poster,\n              title: res.title,\n              synopsis: res.synopsis,\n              genres: res.genres,\n              year: res.year,\n              rating: res.rating.percentage / 10,\n              time: parseInt(res.runtime / 60) + 'h' + _this.pad(res.runtime % 60),\n              trailer: _this.parseYtLink(res.trailer),\n              torrents: _this.parseTorrents(res.torrents.en)\n            }\n          });\n        });\n      } else {\n        _this.setStateCheck(_objectSpread({}, _this.state, {\n          isFetching: true\n        }));\n\n        req('https://yts.am/api/v2/movie_details.json?movie_id=' + id).then(\n        /*#__PURE__*/\n        function () {\n          var _ref = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee(res) {\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    res = res.data.movie;\n                    _context.next = 3;\n                    return _this.setStateCheck({\n                      isFetching: false,\n                      movie: {\n                        isFetching: false,\n                        image: res.large_cover_image,\n                        title: res.title,\n                        synopsis: res.description_intro,\n                        genres: res.genres,\n                        year: res.year,\n                        rating: res.rating,\n                        time: parseInt(res.runtime / 60) + 'h' + _this.pad(res.runtime % 60),\n                        trailer: _this.parseYtLink(res.yt_trailer_code),\n                        torrents: res.torrents.reverse()\n                      }\n                    });\n\n                  case 3:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      }\n    };\n\n    _this.updateMovieId = function (id) {\n      _this.setStateCheck(_objectSpread({}, _this.state, {\n        movieId: id\n      }));\n\n      console.log(id);\n    };\n\n    return _this;\n  }\n\n  _createClass(Movie, [{\n    key: \"parseYtLink\",\n    value: function parseYtLink(link) {\n      if (link) {\n        var res = link.split('?v=');\n        if (res[1]) res = res[1];\n        return 'https://www.youtube.com/embed/' + res;\n      }\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this._isMounted = true;\n      var id = this.props.match.params.id;\n      this.fetchMovie(id);\n      this.fetchMovieStatuse(id);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          movie = _this$state.movie,\n          isFetching = _this$state.isFetching;\n      var classes = this.props.classes;\n      var locale = this.props.locales.locale;\n      if (!movie.title) return null;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Loading, {\n        display: isFetching,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        variant: \"h5\",\n        style: {\n          marginBottom: '15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, movie.title), React.createElement(Grid, {\n        container: true,\n        spacing: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 5,\n        md: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: classes.img,\n        src: movie.image,\n        alt: movie.title,\n        width: \"100%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 7,\n        md: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        color: \"primary\",\n        style: {\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"star\"), React.createElement(Typography, {\n        variant: \"button\",\n        color: \"primary\",\n        style: {\n          marginBottom: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, locale.movie.rating), React.createElement(Typography, {\n        color: \"textPrimary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, movie.rating + '/10'))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        color: \"primary\",\n        style: {\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"movie_creation\"), React.createElement(Typography, {\n        variant: \"button\",\n        color: \"primary\",\n        style: {\n          marginBottom: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, locale.movie.production), React.createElement(Typography, {\n        color: \"textPrimary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, movie.year))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        color: \"primary\",\n        style: {\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"format_align_left\"), React.createElement(Typography, {\n        variant: \"button\",\n        color: \"primary\",\n        style: {\n          marginBottom: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, locale.movie.synopsis), React.createElement(Typography, {\n        color: \"textPrimary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, movie.synopsis))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        color: \"primary\",\n        style: {\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"timer\"), React.createElement(Typography, {\n        variant: \"button\",\n        color: \"primary\",\n        style: {\n          marginBottom: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, locale.movie.time), React.createElement(Typography, {\n        color: \"textPrimary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, movie.time))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        color: \"primary\",\n        style: {\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"local_movies\"), React.createElement(Typography, {\n        variant: \"button\",\n        color: \"primary\",\n        style: {\n          marginBottom: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, locale.movie.genres), movie.genres.map(function (genre) {\n        return React.createElement(Typography, {\n          color: \"textPrimary\",\n          key: genre,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, locale.genres[genre.toLowerCase()]);\n      }))), movie.trailer && React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        color: \"primary\",\n        style: {\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"play_circle_outline\"), React.createElement(Typography, {\n        variant: \"button\",\n        color: \"primary\",\n        style: {\n          marginBottom: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, locale.movie.trailer), React.createElement(\"iframe\", {\n        title: \"yt\",\n        id: \"ytplayer\",\n        type: \"text/html\",\n        src: movie.trailer,\n        frameBorder: \"0\",\n        className: classes.frame,\n        allowFullScreen: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Torrents, {\n        torrents: movie.torrents,\n        onChange: this.updateMovieStatus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return Movie;\n}(React.Component);\n\nvar styles = function styles(theme) {\n  return {\n    img: {\n      borderRadius: '5px',\n      overflow: 'hidden'\n    },\n    paper: {\n      background: theme.palette.secondary.dark,\n      height: '100%',\n      borderRadius: '5px',\n      padding: '15px 20px',\n      overflow: 'hidden'\n    },\n    frame: {\n      margin: '0 -20px -19px -20px',\n      width: 'calc(100% + 40px)',\n      height: '20vw',\n      minHeight: '250px'\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nvar MovieExport = Movie;\nMovieExport = withStyles(styles)(MovieExport);\nMovieExport = connect(mapStateToProps)(MovieExport);\nexport default MovieExport;","map":{"version":3,"sources":["/Users/korlandi/42/hypertube/src/components/movie/Movie.jsx"],"names":["React","Typography","Grid","withStyles","connect","Icon","Loading","req","host","Torrents","Movie","_isMounted","setStateCheck","state","callback","setState","movie","genres","torrents","isFetching","pad","nbr","parseTorrents","ret","console","log","k","push","length","quality","size","filesize","magnet","url","fetchMovieStatuse","id","fetchMovie","then","res","image","images","poster","title","synopsis","year","rating","percentage","time","parseInt","runtime","trailer","parseYtLink","en","data","large_cover_image","description_intro","yt_trailer_code","reverse","updateMovieId","movieId","link","split","props","match","params","classes","locale","locales","marginBottom","img","paper","float","production","map","genre","toLowerCase","frame","updateMovieStatus","Component","styles","theme","borderRadius","overflow","background","palette","secondary","dark","height","padding","margin","width","minHeight","mapStateToProps","MovieExport"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Typography, Grid } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\nimport { connect } from 'react-redux'\nimport Icon from '@material-ui/core/Icon';\nimport Loading from '../../utils/jsx/Loading'\nimport req from '../../utils/req'\nimport host from '../../config'\nimport Torrents from './Torrents'\n\nclass Movie extends React.Component {\n  \n  _isMounted = false\n  setStateCheck = (state, callback) => {\n    if (this._isMounted === true) {\n      this.setState(state, () => {\n        if (callback) callback()\n      })\n    }\n  }\n\n  state = {\n    movie: {\n      genres: [],\n      torrents: []\n    },\n    isFetching: false\n  }\n\n  parseYtLink(link) {\n    if (link) {\n      let res = link.split('?v=')\n      if (res[1])\n        res = res[1]\n      return 'https://www.youtube.com/embed/' + res\n    }\n  }\n\n  pad = nbr => {\n    return nbr > 0 && nbr < 10 ? '0' + nbr : nbr;\n  }\n\n  parseTorrents = torrents => {\n    let ret = []\n    console.log(torrents);\n    for (let k in torrents) {\n      ret.push(torrents[k])\n      ret[ret.length - 1].quality = k\n      ret[ret.length - 1].size = torrents[k].filesize\n      ret[ret.length - 1].magnet = torrents[k].url\n    }\n    return ret\n  }\n\n  fetchMovieStatuse = (id) => {\n    this.setStateCheck({...this.state, isFetching: true})\n    // req(host + '/api/movie_statuses/' + id)\n    // .then(res => {\n    //   console.log(res)\n    // })\n  }\n\n  fetchMovie = (id) => {\n    if (id[0] === 't') {\n      this.setStateCheck({...this.state, isFetching: true})\n      req('https://tv-v2.api-fetch.website/movie/' + id)\n      .then(res => {\n        this.setStateCheck({\n          isFetching: false,\n          movie: {\n            image: res.images.poster,\n            title: res.title,\n            synopsis: res.synopsis,\n            genres: res.genres,\n            year: res.year,\n            rating: res.rating.percentage / 10,\n            time: parseInt(res.runtime / 60) + 'h' + this.pad(res.runtime % 60),\n            trailer: this.parseYtLink(res.trailer),\n            torrents: this.parseTorrents(res.torrents.en)\n          }\n        })\n      })\n    } else {\n      this.setStateCheck({...this.state, isFetching: true})\n      req('https://yts.am/api/v2/movie_details.json?movie_id=' + id)\n      .then(async res => {\n        res = res.data.movie\n        await this.setStateCheck({\n          isFetching: false,\n          movie: {\n            isFetching: false,\n            image: res.large_cover_image,\n            title: res.title,\n            synopsis: res.description_intro,\n            genres: res.genres,\n            year: res.year,\n            rating: res.rating,\n            time: parseInt(res.runtime / 60) + 'h' + this.pad(res.runtime % 60),\n            trailer: this.parseYtLink(res.yt_trailer_code),\n            torrents: res.torrents.reverse()\n          }\n        })\n      })\n    }\n  }\n\n  updateMovieId = (id) => {\n    this.setStateCheck({\n      ...this.state,\n      movieId: id\n    })\n    console.log(id)\n  }\n\n  componentWillMount() {\n    this._isMounted = true\n    const id = this.props.match.params.id\n    this.fetchMovie(id)\n    this.fetchMovieStatuse(id)\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  render() {\n    const { movie, isFetching } = this.state\n    const { classes } = this.props\n    const { locale } = this.props.locales\n\n    if (!movie.title) return null\n    return (\n      <div>\n        <Loading display={isFetching}/>\n        <Typography variant=\"h5\" style={{marginBottom:'15px'}}>{movie.title}</Typography>\n        <Grid container spacing={16}>\n          <Grid item xs={12} sm={5} md={5}>\n            <img className={classes.img} src={movie.image} alt={movie.title} width=\"100%\"/>\n          </Grid>\n          <Grid item xs={12} sm={7} md={7}>\n            <Grid container spacing={8}>\n              <Grid item xs={12} md={6}>\n                <div className={classes.paper}>\n                  <Icon color=\"primary\" style={{float:'right'}}>star</Icon>\n                  <Typography variant=\"button\" color=\"primary\" style={{marginBottom:'10px'}}>{locale.movie.rating}</Typography>\n                  <Typography color=\"textPrimary\">{movie.rating + '/10'}</Typography>\n                </div>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <div className={classes.paper}>\n                  <Icon color=\"primary\" style={{float:'right'}}>movie_creation</Icon>\n                  <Typography variant=\"button\" color=\"primary\" style={{marginBottom:'10px'}}>{locale.movie.production}</Typography>\n                  <Typography color=\"textPrimary\">{movie.year}</Typography>\n                </div>\n              </Grid>\n              <Grid item xs={12}>\n                <div className={classes.paper}>\n                  <Icon color=\"primary\" style={{float:'right'}}>format_align_left</Icon>\n                  <Typography variant=\"button\" color=\"primary\" style={{marginBottom:'10px'}}>{locale.movie.synopsis}</Typography>\n                  <Typography color=\"textPrimary\">{movie.synopsis}</Typography>\n                </div>\n              </Grid>\n              <Grid item xs={12}>\n                <div className={classes.paper}>\n                  <Icon color=\"primary\" style={{float:'right'}}>timer</Icon>\n                  <Typography variant=\"button\" color=\"primary\" style={{marginBottom:'10px'}}>{locale.movie.time}</Typography>\n                  <Typography color=\"textPrimary\">{movie.time}</Typography>\n                </div>\n              </Grid>\n              <Grid item xs={12}>\n                <div className={classes.paper}>\n                  <Icon color=\"primary\" style={{float:'right'}}>local_movies</Icon>\n                  <Typography variant=\"button\" color=\"primary\" style={{marginBottom:'10px'}}>{locale.movie.genres}</Typography>\n                  {movie.genres.map(genre => {\n                    return <Typography color=\"textPrimary\" key={genre}>\n                      {locale.genres[genre.toLowerCase()]}\n                    </Typography>\n                  })}\n                </div>\n              </Grid>\n              {movie.trailer &&\n                <Grid item xs={12}>\n                  <div className={classes.paper}>\n                    <Icon color=\"primary\" style={{float:'right'}}>play_circle_outline</Icon>\n                    <Typography variant=\"button\" color=\"primary\" style={{marginBottom:'10px'}}>{locale.movie.trailer}</Typography>\n                    <iframe title=\"yt\" id=\"ytplayer\" type=\"text/html\" src={movie.trailer} frameBorder=\"0\" className={classes.frame} allowFullScreen=\"1\"/>\n                  </div>\n                </Grid>\n              }\n              <Grid item xs={12}>\n                <div className={classes.paper}>\n                  <Torrents torrents={movie.torrents} onChange={this.updateMovieStatus}/>\n                </div>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nconst styles = theme => ({\n  img: {\n    borderRadius:'5px',\n    overflow:'hidden'\n  },\n  paper: {\n    background: theme.palette.secondary.dark,\n    height:'100%',\n    borderRadius: '5px',\n    padding:'15px 20px',\n    overflow:'hidden'\n  },\n  frame: {\n    margin: '0 -20px -19px -20px',\n    width: 'calc(100% + 40px)',\n    height: '20vw',\n    minHeight: '250px'\n  }\n})\nconst mapStateToProps = state => { return state }\nlet MovieExport = Movie\nMovieExport = withStyles(styles)(MovieExport)\nMovieExport = connect(mapStateToProps)(MovieExport)\nexport default MovieExport\n"]},"metadata":{},"sourceType":"module"}