{"ast":null,"code":"import _objectSpread from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/korlandi/42/hypertube/src/components/stream/Stream.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport req from '../../utils/req';\nimport { Typography, Icon, IconButton } from '@material-ui/core';\nimport host from '../../config';\nimport Player from '../player/Player';\nimport Comments from '../comments/Comments';\nimport { alert } from '../../redux/snackbars/actions';\n\nvar Stream =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Stream, _Component);\n\n  function Stream() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Stream);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Stream)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this._isMounted = false;\n\n    _this.setStateCheck = function (state, callback) {\n      if (_this._isMounted === true) {\n        _this.setState(state, function () {\n          if (callback) callback();\n        });\n      }\n    };\n\n    _this.state = {\n      isFetching: false,\n      startTime: undefined,\n      statusId: -1,\n      name: ''\n    };\n\n    _this.fetchStream = function (id) {\n      var dispatch = _this.props.dispatch;\n\n      _this.setStateCheck(_objectSpread({}, _this.state, {\n        isFetching: true\n      }));\n\n      var userId = _this.props.auth.user.id;\n      req(host + '/api/movie_statuses.json?movie.id=' + id + \"&user.id=\" + userId, {\n        useToken: true\n      }).then(function (res) {\n        console.log();\n\n        if (res.length === 1) {\n          _this.setStateCheck({\n            isFetching: false,\n            startTime: res[0].time,\n            statusId: res[0].id,\n            name: res[0].movie.name\n          });\n        } else {\n          req(host + '/api/movie_statuses', {\n            method: 'POST',\n            body: {\n              time: 0,\n              user: '/api/users/' + userId,\n              movie: '/api/movies/' + id\n            },\n            useToken: true\n          }).then(function (res) {\n            _this.setStateCheck({\n              isFetching: false,\n              startTime: 0,\n              statusId: res.id\n            });\n          }).catch(function (err) {\n            if (err._status < 500) {\n              dispatch(alert('AJAX_ERROR', 'error'));\n            }\n\n            _this.setStateCheck(_objectSpread({}, _this.state, {\n              isFetching: false,\n              startTime: 0\n            }));\n          });\n        }\n      }).catch(function (err) {\n        _this.setStateCheck(_objectSpread({}, _this.state, {\n          isFetching: false,\n          startTime: 0\n        }));\n      });\n    };\n\n    _this.updateMovieStatus = function (newTime) {\n      var dispatch = _this.props.dispatch;\n      var _this$state = _this.state,\n          statusId = _this$state.statusId,\n          isFetching = _this$state.isFetching;\n      if (statusId === -1 || isFetching) return;\n\n      _this.setStateCheck(_objectSpread({}, _this.state, {\n        isFetching: true\n      }));\n\n      req(host + '/api/movie_statuses/' + statusId, {\n        method: 'PUT',\n        body: {\n          time: parseInt(newTime)\n        },\n        useToken: true\n      }).then(function () {\n        _this.setStateCheck(_objectSpread({}, _this.state, {\n          isFetching: false\n        }));\n      }).catch(function (err) {\n        _this.setStateCheck(_objectSpread({}, _this.state, {\n          isFetching: false\n        }));\n      });\n    };\n\n    _this.fetchSubtitles = function (id) {\n      req(host + '/api/movies/subtitles/' + id).catch(function (err) {// Handle error\n      });\n    };\n\n    _this.fetchMovie = function (id) {\n      var dispatch = _this.props.dispatch;\n      req(host + '/api/movies/' + id, {\n        useToken: true\n      }).then(function (res) {\n        if (!res.finished) {\n          window.location = host;\n        }\n\n        _this.fetchStream(id);\n\n        _this.fetchSubtitles(id);\n      }).catch(function (err) {\n        if (err._status < 500) {\n          dispatch(alert('MOVIE_NOT_FOUND', 'error'));\n        }\n      });\n    };\n\n    _this.navigateBack = function () {\n      _this.goBack();\n    };\n\n    return _this;\n  }\n\n  _createClass(Stream, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this._isMounted = true;\n      var params = this.props.match.params;\n      this.fetchMovie(params.id);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          startTime = _this$state2.startTime,\n          name = _this$state2.name;\n      var params = this.props.match.params;\n      if (startTime === undefined) return null;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          marginBottom: '8px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        style: {\n          marginRight: '5px'\n        },\n        onClick: function onClick() {\n          return _this2.props.history.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"keyboard_arrow_left\")), React.createElement(Typography, {\n        variant: \"h5\",\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, name)), React.createElement(Player, {\n        mediaUrl: \"https://hypertube.barthonet.ovh/api/movies/file/\" + params.id,\n        startTime: startTime,\n        onChange: this.updateMovieStatus,\n        movieId: params.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(Comments, {\n        id: params.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Stream;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nexport default connect(mapStateToProps)(Stream);","map":{"version":3,"sources":["/Users/korlandi/42/hypertube/src/components/stream/Stream.jsx"],"names":["React","Component","connect","req","Typography","Icon","IconButton","host","Player","Comments","alert","Stream","_isMounted","setStateCheck","state","callback","setState","isFetching","startTime","undefined","statusId","name","fetchStream","id","dispatch","props","userId","auth","user","useToken","then","res","console","log","length","time","movie","method","body","catch","err","_status","updateMovieStatus","newTime","parseInt","fetchSubtitles","fetchMovie","finished","window","location","navigateBack","goBack","params","match","display","alignItems","marginBottom","marginRight","history","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport req from '../../utils/req'\nimport { Typography, Icon, IconButton } from '@material-ui/core'\nimport host from '../../config'\nimport Player from '../player/Player'\nimport Comments from '../comments/Comments'\nimport { alert } from '../../redux/snackbars/actions'\n\nclass Stream extends Component {\n\n  _isMounted = false\n  setStateCheck = (state, callback) => {\n    if (this._isMounted === true) {\n      this.setState(state, () => {\n        if (callback) callback()\n      })\n    }\n  }\n\n  state = {\n    isFetching: false,\n    startTime: undefined,\n    statusId: -1,\n    name: ''\n  }\n\n  fetchStream = (id) => {\n    const { dispatch } = this.props\n    this.setStateCheck({\n      ...this.state,\n      isFetching: true\n    })\n    let userId = this.props.auth.user.id\n    req(host + '/api/movie_statuses.json?movie.id=' + id + \"&user.id=\" + userId, {\n      useToken: true\n    }).then(res => {\n      console.log()\n      if (res.length === 1) {\n        this.setStateCheck({\n          isFetching: false,\n          startTime: res[0].time,\n          statusId: res[0].id,\n          name: res[0].movie.name\n        })\n      } else {\n        req(host + '/api/movie_statuses', {\n          method: 'POST',\n          body: {\n            time: 0,\n            user: '/api/users/' + userId,\n            movie: '/api/movies/' + id\n          },\n          useToken: true\n        }).then(res => {\n          this.setStateCheck({\n            isFetching: false,\n            startTime: 0,\n            statusId: res.id\n          })\n        }).catch(err => {\n          if (err._status < 500) {\n            dispatch(alert('AJAX_ERROR', 'error'))\n          }\n          this.setStateCheck({\n            ...this.state,\n            isFetching: false,\n            startTime: 0\n          })\n        })\n      }\n    }).catch(err => {\n      this.setStateCheck({\n        ...this.state,\n        isFetching: false,\n        startTime: 0\n      })\n    })\n  }\n\n  updateMovieStatus = newTime => {\n    const { dispatch } = this.props\n    const { statusId, isFetching } = this.state\n    if (statusId === -1 || isFetching) return\n    this.setStateCheck({\n      ...this.state,\n      isFetching: true\n    })\n    req(host + '/api/movie_statuses/' + statusId, {\n      method: 'PUT',\n      body: {\n        time: parseInt(newTime)\n      },\n      useToken: true\n    }).then(() => {\n      this.setStateCheck({\n        ...this.state,\n        isFetching: false\n      })\n    }).catch(err => {\n      this.setStateCheck({\n        ...this.state,\n        isFetching: false\n      })\n    })\n  }\n\n  fetchSubtitles = id => {\n    req(host + '/api/movies/subtitles/' + id)\n    .catch(err => {\n      // Handle error\n    })\n  }\n\n  fetchMovie = id => {\n    const { dispatch } = this.props\n    req(host + '/api/movies/' + id, { useToken: true })\n    .then(res => {\n      if (!res.finished) {\n        window.location = host\n      }\n      this.fetchStream(id)\n      this.fetchSubtitles(id)\n    }).catch(err => {\n      if (err._status < 500) {\n        dispatch(alert('MOVIE_NOT_FOUND', 'error'))\n      }\n    })\n  }\n\n  componentWillMount() {\n    this._isMounted = true\n    const { params } = this.props.match;\n    this.fetchMovie(params.id)\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  navigateBack = () => {\n    this.goBack();\n  }\n\n  render() {\n    const { startTime, name } = this.state\n    const { params } = this.props.match\n    if (startTime === undefined) return null\n    return (\n      <div>\n        <div style={{display: 'flex', alignItems:'center', marginBottom:'8px' }}>\n          <IconButton style={{marginRight:'5px'}} onClick={() => this.props.history.goBack()} >\n            <Icon color=\"primary\">keyboard_arrow_left</Icon>\n          </IconButton>\n          <Typography variant=\"h5\" inline>{name}</Typography>\n        </div>\n        <Player mediaUrl={\"https://hypertube.barthonet.ovh/api/movies/file/\" + params.id}\n            startTime={startTime}\n            onChange={this.updateMovieStatus}\n            movieId={params.id}\n            />\n        <Comments id={params.id} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => { return state }\n\nexport default connect(mapStateToProps)(Stream)\n"]},"metadata":{},"sourceType":"module"}