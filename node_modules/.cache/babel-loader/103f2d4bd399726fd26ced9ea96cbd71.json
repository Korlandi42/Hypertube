{"ast":null,"code":"import _defineProperty from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/korlandi/42/hypertube/src/components/join/login/AskReset.jsx\";\nimport React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, TextField, Button } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport req from '../../../utils/req';\nimport host from '../../../config';\nimport { alert } from '../../../redux/snackbars/actions';\n\nvar Resetpw =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Resetpw, _React$Component);\n\n  function Resetpw() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Resetpw);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Resetpw)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      email: ''\n    };\n\n    _this.handleSubmit = function () {\n      var _this$props = _this.props,\n          toggleAskReset = _this$props.toggleAskReset,\n          dispatch = _this$props.dispatch;\n      req(host + '/api/users/reset-password/send-email', {\n        method: 'post',\n        body: {\n          email: _this.state.email\n        }\n      }).then(function (res) {\n        dispatch(alert('RESET_SENT', 'success'));\n      }).catch(function (err) {\n        if (err._status === 403) dispatch(alert('USER_NOT_FOUND', 'error'));\n      });\n      toggleAskReset();\n    };\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    return _this;\n  }\n\n  _createClass(Resetpw, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          open = _this$props2.open,\n          toggleAskReset = _this$props2.toggleAskReset,\n          locales = _this$props2.locales;\n      var locale = locales.locale;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Dialog, {\n        open: open,\n        onClose: toggleAskReset,\n        \"aria-labelledby\": \"form-dialog-title\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, locale.ask_reset.title), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        name: \"email\",\n        label: locale.global.email,\n        type: \"email\",\n        onChange: this.onChange,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: toggleAskReset,\n        color: \"default\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, locale.global.cancel), React.createElement(Button, {\n        onClick: this.handleSubmit,\n        color: \"primary\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, locale.global.send))));\n    }\n  }]);\n\n  return Resetpw;\n}(React.Component);\n\nResetpw = connect(function (state) {\n  return state;\n})(Resetpw);\nexport default Resetpw;","map":{"version":3,"sources":["/Users/korlandi/42/hypertube/src/components/join/login/AskReset.jsx"],"names":["React","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Button","connect","req","host","alert","Resetpw","state","email","handleSubmit","props","toggleAskReset","dispatch","method","body","then","res","catch","err","_status","onChange","e","setState","target","name","value","open","locales","locale","ask_reset","title","global","cancel","send","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, TextField, Button } from '@material-ui/core'\nimport { connect } from 'react-redux'\nimport req from '../../../utils/req'\nimport host from '../../../config'\nimport { alert } from '../../../redux/snackbars/actions'\n\nclass Resetpw extends React.Component {\n\n  state = {\n    email: '',\n  }\n\n  handleSubmit = () => {\n    const { toggleAskReset, dispatch } = this.props\n    req(host + '/api/users/reset-password/send-email', {\n      method: 'post',\n      body: {email: this.state.email}\n    })\n    .then(res => {\n      dispatch(alert('RESET_SENT', 'success'))\n    })\n    .catch(err => {\n      if (err._status === 403)\n        dispatch(alert('USER_NOT_FOUND', 'error'))\n    })\n    toggleAskReset();\n  }\n\n  onChange = (e) => {\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  render() {\n    const { open, toggleAskReset, locales } = this.props\n    const { locale } = locales\n    return (\n      <div>\n        <Dialog\n          open={open}\n          onClose={toggleAskReset}\n          aria-labelledby=\"form-dialog-title\"\n          fullWidth\n        >\n          <DialogTitle id=\"form-dialog-title\">{locale.ask_reset.title}</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              name=\"email\"\n              label={locale.global.email}\n              type=\"email\"\n              onChange={this.onChange}\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={toggleAskReset} color=\"default\" variant=\"outlined\">\n              {locale.global.cancel}\n            </Button>\n            <Button onClick={this.handleSubmit} color=\"primary\" variant=\"outlined\">\n              {locale.global.send}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nResetpw = connect(state => state)(Resetpw)\nexport default Resetpw\n"]},"metadata":{},"sourceType":"module"}