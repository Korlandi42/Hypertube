{"ast":null,"code":"import _objectSpread from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/korlandi/42/hypertube/src/components/stream/Stream.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Player from '../player/Player';\nimport Comments from '../comments/Comments';\nimport CommentsBox from '../comments/CommentsBox';\n\nvar Stream =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Stream, _Component);\n\n  function Stream() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Stream);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Stream)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isFetching: false,\n      commenstts: []\n    };\n\n    _this.fetchStream = function (id) {\n      _this.setState(_objectSpread({}, _this.state, {\n        isFetching: true\n      }));\n\n      req(host + '/api/movies/' + id + '/messages', {\n        useToken: true\n      }).then(function (res) {\n        _this.setState({\n          isFetching: false,\n          comments: res['hydra:member']\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Stream, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Player, {\n        mediaUrl: \"https://hypertube.barthonet.ovh/api/movies/file/\" + this.props.match.params.id,\n        startTime: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(CommentsBox, {\n        id: this.props.match.params.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(Comments, {\n        id: this.props.match.params.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Stream;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nexport default connect(mapStateToProps)(Stream);","map":{"version":3,"sources":["/Users/korlandi/42/hypertube/src/components/stream/Stream.jsx"],"names":["React","Component","connect","Player","Comments","CommentsBox","Stream","state","isFetching","commenstts","fetchStream","id","setState","req","host","useToken","then","res","comments","props","match","params","mapStateToProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;IAEMC,M;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE,KADN;AAENC,MAAAA,UAAU,EAAE;AAFN,K;;UAKRC,W,GAAc,UAACC,EAAD,EAAQ;AACpB,YAAKC,QAAL,mBAAkB,MAAKL,KAAvB;AAA8BC,QAAAA,UAAU,EAAE;AAA1C;;AACAK,MAAAA,GAAG,CAACC,IAAI,GAAG,cAAP,GAAwBH,EAAxB,GAA6B,WAA9B,EAA2C;AAACI,QAAAA,QAAQ,EAAE;AAAX,OAA3C,CAAH,CACCC,IADD,CACM,UAAAC,GAAG,EAAI;AACT,cAAKL,QAAL,CAAc;AACVJ,UAAAA,UAAU,EAAE,KADF;AAEVU,UAAAA,QAAQ,EAAED,GAAG,CAAC,cAAD;AAFH,SAAd;AAIH,OAND;AAOD,K;;;;;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,qDAAqD,KAAKE,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBV,EAA/F;AAAmG,QAAA,SAAS,EAAE,CAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,WAAD;AAAa,QAAA,EAAE,EAAE,KAAKQ,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBV,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,KAAKQ,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBV,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAOD;;;;EA1BkBV,S;;AA6BrB,IAAMqB,eAAe,GAAG,SAAlBA,eAAkB,CAAAf,KAAK,EAAI;AAAE,SAAOA,KAAP;AAAc,CAAjD;;AAEA,eAAeL,OAAO,CAACoB,eAAD,CAAP,CAAyBhB,MAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Player from '../player/Player'\nimport Comments from '../comments/Comments';\nimport CommentsBox from '../comments/CommentsBox';\n\nclass Stream extends Component {\n\n  state = {\n    isFetching: false,\n    commenstts: []\n  }\n\n  fetchStream = (id) => {\n    this.setState({...this.state, isFetching: true})\n    req(host + '/api/movies/' + id + '/messages', {useToken: true})\n    .then(res => {\n        this.setState({\n            isFetching: false,\n            comments: res['hydra:member']\n        })\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Player mediaUrl={\"https://hypertube.barthonet.ovh/api/movies/file/\" + this.props.match.params.id} startTime={0}/>\n        <CommentsBox id={this.props.match.params.id} />\n        <Comments id={this.props.match.params.id} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => { return state }\n\nexport default connect(mapStateToProps)(Stream)\n"]},"metadata":{},"sourceType":"module"}