{"ast":null,"code":"import _defineProperty from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/korlandi/42/hypertube/src/components/account/Password.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { req, validator, checkForm } from '../../utils';\nimport { TextField, Button, Grid } from '@material-ui/core';\nimport host from '../../config';\nimport { alert } from '../../redux/snackbars/actions';\n\nvar Password =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Password, _Component);\n\n  function Password() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Password);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Password)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      form: {\n        password: '',\n        newpassword: '',\n        repassword: ''\n      },\n      formErrors: {\n        password: [],\n        newpassword: [],\n        repassword: []\n      }\n    };\n\n    _this.validate = function (name) {\n      validator.value = _this.state.form[name];\n      if (name === 'password') return validator.notNull().errors;else if (name === 'newpassword') return validator.notNull().minLen(5).errors;else if (name === 'repassword') return validator.sameAs(_this.state.form.newpassword).errors;\n    };\n\n    _this.onChange = function (e) {\n      var name = e.target.name;\n\n      _this.setState(_objectSpread({}, _this.state, {\n        form: _objectSpread({}, _this.state.form, _defineProperty({}, name, e.target.value))\n      }), function () {\n        _this.setState({\n          formErrors: _objectSpread({}, _this.state.formErrors, _defineProperty({}, name, _this.validate(name)))\n        });\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      var body = _this.state.form;\n      var dispatch = _this.props.dispatch;\n      e.preventDefault();\n      checkForm(body, _this.validate, function (errors, nbErrors) {\n        _this.setState(_objectSpread({}, _this.state, {\n          formErrors: errors\n        }));\n\n        if (!nbErrors) {\n          body = {\n            current_password: body.password,\n            new_password: body.newpassword\n          };\n          req(host + '/api/users/me/change-password', {\n            method: 'post',\n            useToken: true,\n            body: body\n          }).then(function () {\n            dispatch(alert('USER_EDIT_PASSWORD_SUCCESS', 'success'));\n          }).catch(function () {\n            dispatch(alert('USER_BAD_PASSWORD', 'error'));\n          });\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Password, [{\n    key: \"render\",\n    value: function render() {\n      var formErrors = this.state.formErrors;\n      var locale = this.props.locales.locale;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 16,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        error: formErrors.password.length ? true : false,\n        helperText: locale.validator[formErrors.password[0]],\n        type: \"password\",\n        name: \"password\",\n        label: locale.global.password,\n        onChange: this.onChange,\n        margin: \"normal\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        error: formErrors.newpassword.length ? true : false,\n        helperText: locale.validator[formErrors.newpassword[0]],\n        type: \"password\",\n        name: \"newpassword\",\n        label: locale.global.new_password,\n        onChange: this.onChange,\n        margin: \"normal\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        error: formErrors.repassword.length ? true : false,\n        helperText: locale.validator[formErrors.repassword[0]],\n        type: \"password\",\n        name: \"repassword\",\n        label: locale.global.repassword,\n        onChange: this.onChange,\n        margin: \"normal\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        type: \"submit\",\n        variant: \"outlined\",\n        color: \"primary\",\n        fullWidth: true,\n        style: {\n          marginTop: '5px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, locale.account.change_password)));\n    }\n  }]);\n\n  return Password;\n}(Component);\n\nexport default connect(function (state) {\n  return state;\n})(Password);","map":{"version":3,"sources":["/Users/korlandi/42/hypertube/src/components/account/Password.jsx"],"names":["React","Component","connect","req","validator","checkForm","TextField","Button","Grid","host","alert","Password","state","form","password","newpassword","repassword","formErrors","validate","name","value","notNull","errors","minLen","sameAs","onChange","e","target","setState","handleSubmit","body","dispatch","props","preventDefault","nbErrors","current_password","new_password","method","useToken","then","catch","locale","locales","length","global","marginTop","account","change_password"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { req, validator, checkForm } from '../../utils'\nimport { TextField, Button, Grid } from '@material-ui/core'\nimport host from '../../config'\nimport { alert } from '../../redux/snackbars/actions'\n\nclass Password extends Component {\n\n  state = {\n    form : {\n      password: '',\n      newpassword: '',\n      repassword: '',\n    },\n    formErrors: {\n      password: [] , newpassword: [], repassword: []\n    }\n  }\n\n  validate = (name) => {\n    validator.value = this.state.form[name]\n\n    if (name === 'password')\n      return validator.notNull().errors\n    else if (name === 'newpassword')\n      return validator.notNull().minLen(5).errors\n    else if (name === 'repassword')\n      return validator.sameAs(this.state.form.newpassword).errors\n  }\n\n  onChange = (e) => {\n    let name = e.target.name\n    this.setState({\n      ...this.state,\n      form: {\n        ...this.state.form,\n        [name]: e.target.value\n      }\n    }, () => {\n      this.setState({\n        formErrors: {\n          ...this.state.formErrors,\n          [name]: this.validate(name)\n        }\n      })\n    })\n  }\n\n  handleSubmit = (e) => {\n    let body = this.state.form\n    const { dispatch } = this.props\n\n    e.preventDefault()\n    checkForm(body, this.validate, (errors, nbErrors) => {\n      this.setState({...this.state, formErrors: errors})\n      if (!nbErrors) {\n        body = {\n          current_password: body.password,\n          new_password: body.newpassword\n        }\n        req(host + '/api/users/me/change-password', {\n          method: 'post',\n          useToken: true,\n          body: body\n        }).then(() => {\n          dispatch(alert('USER_EDIT_PASSWORD_SUCCESS', 'success'))\n        }).catch(() => {\n          dispatch(alert('USER_BAD_PASSWORD', 'error'))\n        })\n      }\n    })\n  }\n\n  render() {\n    const { formErrors } = this.state\n    const { locale } = this.props.locales\n\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <Grid container spacing={16} justify=\"center\">\n            <Grid item xs={12} md={12}>\n              <TextField\n                error={formErrors.password.length ? true : false}\n                helperText={locale.validator[formErrors.password[0]]}\n                type=\"password\"\n                name=\"password\"\n                label={locale.global.password}\n                onChange={this.onChange}\n                margin=\"normal\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                error={formErrors.newpassword.length ? true : false}\n                helperText={locale.validator[formErrors.newpassword[0]]}\n                type=\"password\"\n                name=\"newpassword\"\n                label={locale.global.new_password}\n                onChange={this.onChange}\n                margin=\"normal\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                error={formErrors.repassword.length ? true : false}\n                helperText={locale.validator[formErrors.repassword[0]]}\n                type=\"password\"\n                name=\"repassword\"\n                label={locale.global.repassword}\n                onChange={this.onChange}\n                margin=\"normal\"\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            variant=\"outlined\"\n            color=\"primary\"\n            fullWidth\n            style={{marginTop:'5px'}}\n          >\n            {locale.account.change_password}\n          </Button>\n        </form>\n      </div>\n    );\n  }\n\n}\n\nexport default connect(state => state)(Password);\n"]},"metadata":{},"sourceType":"module"}