{"ast":null,"code":"import _defineProperty from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/korlandi/42/hypertube/src/components/join/register/Register.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { TextField, Button, Grid, Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { req, validator, checkForm } from '../../../utils';\nimport { alert } from '../../../redux/snackbars/actions';\nimport { login } from '../../../redux/auth/actions';\nimport host from '../../../config';\n\nvar Register =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Register, _React$Component);\n\n  function Register() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Register)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      form: {\n        username: '',\n        firstname: '',\n        lastname: '',\n        email: '',\n        password: '',\n        repassword: ''\n      },\n      formErrors: {\n        username: [],\n        firstname: [],\n        lastname: [],\n        email: [],\n        password: [],\n        repassword: []\n      }\n    };\n\n    _this.handleSubmit = function (e) {\n      var dispatch = _this.props.dispatch;\n      e.preventDefault();\n\n      var body = _objectSpread({}, _this.state.form);\n\n      checkForm(body, _this.validate, function (errors, nbErrors) {\n        _this.setState(_objectSpread({}, _this.state, {\n          formErrors: errors\n        }));\n\n        body = _objectSpread({}, body, {\n          plainPassword: body.password\n        });\n\n        if (!nbErrors && _this.state.file) {\n          req(host + '/api/users', {\n            method: 'post',\n            body: body\n          }).then(function () {\n            dispatch(login({\n              username: body.username,\n              password: body.plainPassword\n            }, function () {\n              // if there is a file, upload\n              if (_this.state.file) {\n                var data = new FormData();\n                data.append('file', _this.state.file);\n                req(host + '/api/media_objects/avatar/create', {\n                  method: 'post',\n                  body: data,\n                  useToken: true,\n                  contentType: false\n                }).catch(function (err) {\n                  if (err._status >= 400 && err._status < 500) {\n                    dispatch(alert('REGISTER_BAD_PICTURE', 'error'));\n                  }\n                });\n              }\n            }));\n            dispatch(alert('REGISTER_SUCCESS', 'success'));\n          }).catch(function (err) {\n            if (err._status === 400) {\n              if (err.violations[0].propertyPath === 'username') {\n                dispatch(alert('REGISTER_USERNAME_TOOK', 'error'));\n              } else if (err.violations[0].propertyPath === 'email') {\n                dispatch(alert('REGISTER_EMAIL_TOOK', 'error'));\n              }\n            }\n          });\n        } else if (!_this.state.file) {}\n      });\n    };\n\n    _this.validate = function (name) {\n      validator.value = _this.state.form[name];\n      if (name === 'username') return validator.notNull().minLen(3).maxLen(20).errors;else if (name === 'firstname') return validator.notNull().isAlphabetic().minLen(2).maxLen(40).errors;else if (name === 'lastname') return validator.notNull().isAlphabetic().minLen(2).maxLen(40).errors;else if (name === 'email') return validator.isEmail().errors;else if (name === 'password') return validator.notNull().minLen(5).isPassword().errors;else if (name === 'repassword') return validator.sameAs(_this.state.form.password).errors;\n    };\n\n    _this.onChange = function (e) {\n      var name = e.target.name;\n\n      _this.setState(_objectSpread({}, _this.state, {\n        form: _objectSpread({}, _this.state.form, _defineProperty({}, name, e.target.value))\n      }), function () {\n        _this.setState(_objectSpread({}, _this.state, {\n          formErrors: _objectSpread({}, _this.state.formErrors, _defineProperty({}, name, _this.validate(name)))\n        }));\n      });\n    };\n\n    _this.onFileChange = function (e) {\n      var file = e.target.files[0];\n\n      if (file) {\n        var reader = new FileReader();\n\n        reader.onload = function () {\n          _this.setState(_objectSpread({}, _this.state, {\n            image: reader.result\n          }), function () {\n            _this.setState(_objectSpread({}, _this.state, {\n              file: file\n            }));\n          });\n        };\n\n        reader.readAsDataURL(file);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var locale = this.props.locales.locale;\n      var formErrors = this.state.formErrors;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        color: \"primary\",\n        variant: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, locale.register.title), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 16,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        error: formErrors.username.length ? true : false,\n        helperText: locale.validator[formErrors.username[0]],\n        name: \"username\",\n        label: locale.global.username,\n        onChange: this.onChange,\n        margin: \"normal\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        error: formErrors.firstname.length ? true : false,\n        helperText: locale.validator[formErrors.firstname[0]],\n        name: \"firstname\",\n        label: locale.global.firstname,\n        onChange: this.onChange,\n        margin: \"normal\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        error: formErrors.lastname.length ? true : false,\n        helperText: locale.validator[formErrors.lastname[0]],\n        name: \"lastname\",\n        label: locale.global.lastname,\n        onChange: this.onChange,\n        margin: \"normal\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      })), this.state.image && React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 7,\n        lg: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.avatar,\n        style: {\n          backgroundImage: 'url(' + this.state.image + ')'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        accept: \"image/*\",\n        id: \"contained-button-file\",\n        type: \"file\",\n        style: {\n          display: 'none'\n        },\n        onChange: this.onFileChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"contained-button-file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        component: \"span\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, locale.register.upload))), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        error: formErrors.email.length ? true : false,\n        helperText: locale.validator[formErrors.email[0]],\n        name: \"email\",\n        label: locale.global.email,\n        onChange: this.onChange,\n        margin: \"normal\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        error: formErrors.password.length ? true : false,\n        helperText: locale.validator[formErrors.password[0]],\n        type: \"password\",\n        name: \"password\",\n        label: locale.global.password,\n        onChange: this.onChange,\n        margin: \"normal\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        error: formErrors.repassword.length ? true : false,\n        helperText: locale.validator[formErrors.repassword[0]],\n        type: \"password\",\n        name: \"repassword\",\n        label: locale.global.repassword,\n        onChange: this.onChange,\n        margin: \"normal\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        type: \"submit\",\n        variant: \"outlined\",\n        color: \"primary\",\n        className: classes.button,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, locale.register.btn)));\n    }\n  }]);\n\n  return Register;\n}(React.Component);\n\nvar styles = {\n  button: {\n    marginTop: '10px'\n  },\n  avatar: {\n    width: '100%',\n    paddingBottom: '100%',\n    backgroundColor: '#222',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: '100% auto',\n    borderRadius: '5px'\n  }\n};\nvar RegisterExport = Register;\nRegisterExport = withStyles(styles)(RegisterExport);\nRegisterExport = connect(function (state) {\n  return state;\n})(RegisterExport);\nexport default RegisterExport;","map":{"version":3,"sources":["/Users/korlandi/42/hypertube/src/components/join/register/Register.jsx"],"names":["React","connect","TextField","Button","Grid","Typography","withStyles","req","validator","checkForm","alert","login","host","Register","state","form","username","firstname","lastname","email","password","repassword","formErrors","handleSubmit","e","dispatch","props","preventDefault","body","validate","errors","nbErrors","setState","plainPassword","file","method","then","data","FormData","append","useToken","contentType","catch","err","_status","violations","propertyPath","name","value","notNull","minLen","maxLen","isAlphabetic","isEmail","isPassword","sameAs","onChange","target","onFileChange","files","reader","FileReader","onload","image","result","readAsDataURL","classes","locale","locales","register","title","length","global","avatar","backgroundImage","display","upload","button","btn","Component","styles","marginTop","width","paddingBottom","backgroundColor","backgroundPosition","backgroundRepeat","backgroundSize","borderRadius","RegisterExport"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { TextField, Button, Grid, Typography } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\nimport { req, validator, checkForm } from '../../../utils'\nimport { alert } from '../../../redux/snackbars/actions'\nimport { login } from '../../../redux/auth/actions'\nimport host from '../../../config'\n\nclass Register extends React.Component {\n\n  state = {\n    form: {\n      username: '',\n      firstname: '',\n      lastname: '',\n      email: '',\n      password: '',\n      repassword: ''\n    },\n    formErrors: {\n      username: [], firstname: [], lastname: [], email: [], password: [], repassword: []\n    }\n  }\n\n  handleSubmit = (e) => {\n    const { dispatch } = this.props\n    e.preventDefault()\n    let body = {...this.state.form}\n\n    checkForm(body, this.validate, (errors, nbErrors) => {\n      this.setState({...this.state, formErrors: errors})\n      body = {...body, plainPassword: body.password}\n      if (!nbErrors && this.state.file) {\n        req(host + '/api/users', {\n          method: 'post', body: body\n        })\n        .then(() => {\n          dispatch(login({username: body.username, password: body.plainPassword}, () => {\n            // if there is a file, upload\n            if (this.state.file) {\n              const data = new FormData();\n              data.append('file', this.state.file)\n              req(host + '/api/media_objects/avatar/create', {\n                method: 'post',\n                body: data,\n                useToken: true,\n                contentType: false\n              }).catch(err => {\n                if (err._status >= 400 && err._status < 500) {\n                  dispatch(alert('REGISTER_BAD_PICTURE', 'error'))\n                }\n              })\n            }\n          }))\n          dispatch(alert('REGISTER_SUCCESS', 'success'))\n        })\n        .catch(err => {\n          if (err._status === 400) {\n            if (err.violations[0].propertyPath === 'username') {\n              dispatch(alert('REGISTER_USERNAME_TOOK', 'error'))\n            } else if (err.violations[0].propertyPath === 'email') {\n              dispatch(alert('REGISTER_EMAIL_TOOK', 'error'))\n            }\n          }\n        })\n      }\n      else if (!this.state.file) {\n        \n      }\n    })\n  }\n\n  validate = (name) => {\n    validator.value = this.state.form[name]\n\n    if (name === 'username')\n      return validator.notNull().minLen(3).maxLen(20).errors\n    else if (name === 'firstname')\n      return validator.notNull().isAlphabetic().minLen(2).maxLen(40).errors\n    else if (name === 'lastname')\n      return validator.notNull().isAlphabetic().minLen(2).maxLen(40).errors\n    else if (name === 'email')\n      return validator.isEmail().errors\n    else if (name === 'password')\n      return validator.notNull().minLen(5).isPassword().errors\n    else if (name === 'repassword')\n      return validator.sameAs(this.state.form.password).errors\n  }\n\n  onChange = (e) => {\n    let name = e.target.name\n    this.setState({\n      ...this.state,\n      form: {\n        ...this.state.form,\n        [name]: e.target.value\n      }\n    }, () => {\n      this.setState({\n        ...this.state,\n        formErrors: {\n          ...this.state.formErrors,\n          [name]: this.validate(name)\n        }\n      })\n    })\n  }\n\n  onFileChange = (e) => {\n    const file = e.target.files[0]\n    if (file) {\n      let reader = new FileReader()\n      reader.onload = () => {\n        this.setState({...this.state, image: reader.result}, () => {\n          this.setState({...this.state, file: file})\n        })\n      }\n      reader.readAsDataURL(file)\n    }\n  }\n\n  render () {\n    const { classes } = this.props\n    const { locale } = this.props.locales\n    const { formErrors } = this.state\n\n    return (\n      <div>\n        <Typography color=\"primary\" variant=\"h5\">{locale.register.title}</Typography>\n        <form onSubmit={this.handleSubmit}>\n          <Grid container spacing={16} justify=\"center\">\n            <Grid item xs={12}>\n              <TextField\n                error={formErrors.username.length ? true : false}\n                helperText={locale.validator[formErrors.username[0]]}\n                name=\"username\"\n                label={locale.global.username}\n                onChange={this.onChange}\n                margin=\"normal\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                error={formErrors.firstname.length ? true : false}\n                helperText={locale.validator[formErrors.firstname[0]]}\n                name=\"firstname\"\n                label={locale.global.firstname}\n                onChange={this.onChange}\n                margin=\"normal\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                error={formErrors.lastname.length ? true : false}\n                helperText={locale.validator[formErrors.lastname[0]]}\n                name=\"lastname\"\n                label={locale.global.lastname}\n                onChange={this.onChange}\n                margin=\"normal\"\n                fullWidth\n              />\n            </Grid>\n            {this.state.image &&\n              <Grid item xs={12} sm={6} md={7} lg={6}>\n                <div\n                  className={classes.avatar}\n                  style={{backgroundImage:'url(' + this.state.image + ')'}}\n                >\n                </div>\n              </Grid>\n            }\n            <Grid item xs={12}>\n              <input accept=\"image/*\" id=\"contained-button-file\" type=\"file\" style={{display: 'none'}} onChange={this.onFileChange}/>\n              <label htmlFor=\"contained-button-file\">\n                <Button color=\"primary\" component=\"span\" fullWidth>\n                  {locale.register.upload}\n                </Button>\n              </label>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                error={formErrors.email.length ? true : false}\n                helperText={locale.validator[formErrors.email[0]]}\n                name=\"email\"\n                label={locale.global.email}\n                onChange={this.onChange}\n                margin=\"normal\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                error={formErrors.password.length ? true : false}\n                helperText={locale.validator[formErrors.password[0]]}\n                type=\"password\"\n                name=\"password\"\n                label={locale.global.password}\n                onChange={this.onChange}\n                margin=\"normal\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                error={formErrors.repassword.length ? true : false}\n                helperText={locale.validator[formErrors.repassword[0]]}\n                type=\"password\"\n                name=\"repassword\"\n                label={locale.global.repassword}\n                onChange={this.onChange}\n                margin=\"normal\"\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            variant=\"outlined\"\n            color=\"primary\"\n            className={classes.button}\n            fullWidth\n          >\n            {locale.register.btn}\n          </Button>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst styles = {\n  button: {\n    marginTop: '10px'\n  },\n  avatar: {\n    width: '100%',\n    paddingBottom: '100%',\n    backgroundColor: '#222',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: '100% auto',\n    borderRadius: '5px'\n  }\n}\nlet RegisterExport = Register\nRegisterExport = withStyles(styles)(RegisterExport)\nRegisterExport = connect(state => state)(RegisterExport)\nexport default RegisterExport\n"]},"metadata":{},"sourceType":"module"}