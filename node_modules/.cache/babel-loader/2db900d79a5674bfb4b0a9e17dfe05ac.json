{"ast":null,"code":"import _classCallCheck from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar Validator =\n/*#__PURE__*/\nfunction () {\n  function Validator() {\n    _classCallCheck(this, Validator);\n\n    this._value = '';\n    this._errors = [];\n  }\n\n  _createClass(Validator, [{\n    key: \"notNull\",\n    value: function notNull() {\n      if (this._value === undefined || this._value === '') this.addError('IS_NULL');\n      return this;\n    }\n  }, {\n    key: \"isString\",\n    value: function isString() {\n      if (typeof this._value != 'string') this.addError('NOT_STRING');\n      return this;\n    }\n  }, {\n    key: \"isPassword\",\n    value: function isPassword() {\n      var regex = /^\\S*(?=\\S{8,})(?=\\S*[a-z])(?=\\S*[A-Z])(?=\\S*[\\d])\\S*$/;\n      if (!this._value.match(regex)) this.addError('INVALID_PASSWORD');\n      return this;\n    }\n  }, {\n    key: \"isAlphabetic\",\n    value: function isAlphabetic() {\n      var regex = /^([A-Za-zàéèêëîïôöûüùç.]+(( |')[A-Za-zàéèêëîïôöûüùç.]+)*)+([-]([A-Za-zàéèêëîïôöûüùç.]+(( |')[A-Za-zàéèêëîïôöûüùç.]+)*)+)*$/;\n      if (!this._value.match(regex)) this.addError('NOT_ALPHABETIC');\n      return this;\n    }\n  }, {\n    key: \"isNumeric\",\n    value: function isNumeric() {\n      if (isNaN(this._value) || !isFinite(this._value)) this.addError('NOT_NUMERIC');\n      return this;\n    }\n  }, {\n    key: \"sameAs\",\n    value: function sameAs(x) {\n      if (this._value !== x) this.addError('DIFFERENT');\n      return this;\n    }\n  }, {\n    key: \"isEmail\",\n    value: function isEmail() {\n      var regex = /^\\w+[\\w-+.]*@\\w+([-.]\\w+)*\\.[a-zA-Z]{2,}$/;\n      if (!this._value.match(regex)) this.addError('INVALID_EMAIL');\n      return this;\n    }\n  }, {\n    key: \"minLen\",\n    value: function minLen(n) {\n      if (this._value.length > 0 && this._value.length < n) this.addError('TOO_SHORT');\n      return this;\n    }\n  }, {\n    key: \"maxLen\",\n    value: function maxLen(n) {\n      if (this._value.length > n) this.addError('TOO_LONG');\n      return this;\n    } //seters, geters\n\n  }, {\n    key: \"addError\",\n    value: function addError(error) {\n      this._errors.push(error);\n\n      return this;\n    }\n  }, {\n    key: \"value\",\n    set: function set(v) {\n      this._value = v;\n      this._errors = [];\n    }\n  }, {\n    key: \"errors\",\n    get: function get() {\n      return this._errors;\n    }\n  }]);\n\n  return Validator;\n}();\n\nexport default new Validator();","map":{"version":3,"sources":["/Users/korlandi/42/hypertube/src/utils/validator.js"],"names":["Validator","_value","_errors","undefined","addError","regex","match","isNaN","isFinite","x","n","length","error","push","v"],"mappings":";;;IAAMA,S;;;;;;SAEJC,M,GAAS,E;SACTC,O,GAAU,E;;;;;8BAEA;AACR,UAAI,KAAKD,MAAL,KAAgBE,SAAhB,IAA6B,KAAKF,MAAL,KAAgB,EAAjD,EACE,KAAKG,QAAL,CAAc,SAAd;AACF,aAAO,IAAP;AACD;;;+BAEU;AACT,UAAI,OAAO,KAAKH,MAAZ,IAAsB,QAA1B,EACE,KAAKG,QAAL,CAAc,YAAd;AACF,aAAO,IAAP;AACD;;;iCAEY;AACX,UAAIC,KAAK,GAAG,uDAAZ;AACA,UAAI,CAAC,KAAKJ,MAAL,CAAYK,KAAZ,CAAkBD,KAAlB,CAAL,EACE,KAAKD,QAAL,CAAc,kBAAd;AACF,aAAO,IAAP;AACD;;;mCAEc;AACb,UAAIC,KAAK,GAAG,4HAAZ;AACA,UAAI,CAAC,KAAKJ,MAAL,CAAYK,KAAZ,CAAkBD,KAAlB,CAAL,EACE,KAAKD,QAAL,CAAc,gBAAd;AACF,aAAO,IAAP;AACD;;;gCAEW;AACV,UAAIG,KAAK,CAAC,KAAKN,MAAN,CAAL,IAAsB,CAACO,QAAQ,CAAC,KAAKP,MAAN,CAAnC,EACE,KAAKG,QAAL,CAAc,aAAd;AACF,aAAO,IAAP;AACD;;;2BAEMK,C,EAAG;AACR,UAAI,KAAKR,MAAL,KAAgBQ,CAApB,EACE,KAAKL,QAAL,CAAc,WAAd;AACF,aAAO,IAAP;AACD;;;8BAES;AACR,UAAIC,KAAK,GAAG,2CAAZ;AACA,UAAI,CAAC,KAAKJ,MAAL,CAAYK,KAAZ,CAAkBD,KAAlB,CAAL,EACE,KAAKD,QAAL,CAAc,eAAd;AACF,aAAO,IAAP;AACD;;;2BAEMM,C,EAAG;AACR,UAAI,KAAKT,MAAL,CAAYU,MAAZ,GAAqB,CAArB,IAA0B,KAAKV,MAAL,CAAYU,MAAZ,GAAqBD,CAAnD,EACE,KAAKN,QAAL,CAAc,WAAd;AACF,aAAO,IAAP;AACD;;;2BAEMM,C,EAAG;AACR,UAAI,KAAKT,MAAL,CAAYU,MAAZ,GAAqBD,CAAzB,EACE,KAAKN,QAAL,CAAc,UAAd;AACF,aAAO,IAAP;AACD,K,CAED;;;;6BAUSQ,K,EAAO;AACd,WAAKV,OAAL,CAAaW,IAAb,CAAkBD,KAAlB;;AACA,aAAO,IAAP;AACD;;;sBAZSE,C,EAAG;AACX,WAAKb,MAAL,GAAca,CAAd;AACA,WAAKZ,OAAL,GAAe,EAAf;AACD;;;wBAEY;AACX,aAAO,KAAKA,OAAZ;AACD;;;;;;AAQH,eAAe,IAAIF,SAAJ,EAAf","sourcesContent":["class Validator {\n\n  _value = ''\n  _errors = []\n\n  notNull() {\n    if (this._value === undefined || this._value === '')\n      this.addError('IS_NULL')\n    return this\n  }\n\n  isString() {\n    if (typeof this._value != 'string')\n      this.addError('NOT_STRING')\n    return this\n  }\n\n  isPassword() {\n    let regex = /^\\S*(?=\\S{8,})(?=\\S*[a-z])(?=\\S*[A-Z])(?=\\S*[\\d])\\S*$/\n    if (!this._value.match(regex))\n      this.addError('INVALID_PASSWORD')\n    return this\n  }\n\n  isAlphabetic() {\n    let regex = /^([A-Za-zàéèêëîïôöûüùç.]+(( |')[A-Za-zàéèêëîïôöûüùç.]+)*)+([-]([A-Za-zàéèêëîïôöûüùç.]+(( |')[A-Za-zàéèêëîïôöûüùç.]+)*)+)*$/\n    if (!this._value.match(regex))\n      this.addError('NOT_ALPHABETIC')\n    return this\n  }\n\n  isNumeric() {\n    if (isNaN(this._value) || !isFinite(this._value))\n      this.addError('NOT_NUMERIC')\n    return this\n  }\n\n  sameAs(x) {\n    if (this._value !== x)\n      this.addError('DIFFERENT')\n    return this\n  }\n\n  isEmail() {\n    let regex = /^\\w+[\\w-+.]*@\\w+([-.]\\w+)*\\.[a-zA-Z]{2,}$/\n    if (!this._value.match(regex))\n      this.addError('INVALID_EMAIL')\n    return this\n  }\n\n  minLen(n) {\n    if (this._value.length > 0 && this._value.length < n)\n      this.addError('TOO_SHORT')\n    return this\n  }\n\n  maxLen(n) {\n    if (this._value.length > n)\n      this.addError('TOO_LONG')\n    return this\n  }\n\n  //seters, geters\n  set value(v) {\n    this._value = v\n    this._errors = []\n  }\n\n  get errors() {\n    return this._errors\n  }\n\n  addError(error) {\n    this._errors.push(error)\n    return this\n  }\n}\n\nexport default new Validator()\n"]},"metadata":{},"sourceType":"module"}