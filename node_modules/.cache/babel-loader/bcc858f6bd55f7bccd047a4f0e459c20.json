{"ast":null,"code":"import _toConsumableArray from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/korlandi/42/hypertube/src/components/comments/Comments.jsx\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport Loading from '../../utils/jsx/Loading';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport req from '../../utils/req';\nimport host from '../../config';\nimport Moment from 'react-moment';\nimport CommentsBox from './CommentsBox';\n\nvar Comments =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Comments, _React$Component);\n\n  function Comments() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Comments)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this._isMounted = false;\n    _this.state = {\n      isFetching: false,\n      comments: [],\n      page: 1,\n      display: true\n    };\n\n    _this.addComment = function (id) {\n      _this.setState({\n        page: 1,\n        comments: [],\n        display: true\n      }, function () {\n        _this.fetchComments(id);\n      });\n    };\n\n    _this.fetchComments = function (id) {\n      _this.setState(_objectSpread({}, _this.state, {\n        isFetching: true\n      }));\n\n      req(host + '/api/movies/' + id + '/messages.json?order[id]=DESC&page=' + _this.state.page, {\n        useToken: true\n      }).then(function (res) {\n        if (res.length) {\n          _this.setState({\n            isFetching: false,\n            comments: [].concat(_toConsumableArray(_this.state.comments), _toConsumableArray(res))\n          });\n        } else {\n          _this.setState({\n            isFetching: false,\n            display: false\n          });\n        }\n\n        console.log(_this.state.comments);\n      }).catch(function (err) {});\n    };\n\n    return _this;\n  }\n\n  _createClass(Comments, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.fetchComments(this.props.id);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._isMounted = true;\n\n      window.onscroll = function () {\n        if (_this2._isMounted === true) {\n          if (window.innerHeight + document.documentElement.scrollTop > document.documentElement.offsetHeight - 200) {\n            if (_this2.state.display) {\n              _this2.setState({\n                isFetching: false,\n                page: _this2.state.page + 1\n              });\n\n              _this2.fetchComments(_this2.props.id);\n            }\n          }\n        }\n      };\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isFetching = _this$state.isFetching,\n          comments = _this$state.comments;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(CommentsBox, {\n        id: this.props.id,\n        addComment: this.addComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(Loading, {\n        display: isFetching,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, comments.map(function (comment) {\n        return React.createElement(ListItem, {\n          key: comment.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(ListItemAvatar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          src: comment.owner.avatarUrl,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        })), React.createElement(ListItemText, {\n          primary: comment.owner.username,\n          secondary: comment.message,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return Comments;\n}(React.Component);\n\nvar styles = function styles(theme) {\n  return {\n    img: {\n      borderRadius: '5px',\n      overflow: 'hidden'\n    },\n    paper: {\n      background: theme.palette.secondary.dark,\n      height: '100%',\n      borderRadius: '5px',\n      padding: '15px 20px',\n      overflow: 'hidden'\n    },\n    frame: {\n      margin: '0 -20px -19px -20px',\n      width: 'calc(100% + 40px)',\n      height: '20vw',\n      minHeight: '250px'\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nvar CommentsExport = Comments;\nCommentsExport = withStyles(styles)(CommentsExport);\nCommentsExport = connect(mapStateToProps)(CommentsExport);\nexport default CommentsExport;","map":{"version":3,"sources":["/Users/korlandi/42/hypertube/src/components/comments/Comments.jsx"],"names":["React","withStyles","connect","Loading","List","ListItem","ListItemText","ListItemAvatar","Avatar","req","host","Moment","CommentsBox","Comments","_isMounted","state","isFetching","comments","page","display","addComment","id","setState","fetchComments","useToken","then","res","length","console","log","catch","err","props","window","onscroll","innerHeight","document","documentElement","scrollTop","offsetHeight","map","comment","owner","avatarUrl","username","message","Component","styles","theme","img","borderRadius","overflow","paper","background","palette","secondary","dark","height","padding","frame","margin","width","minHeight","mapStateToProps","CommentsExport"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { connect } from 'react-redux'\nimport Loading from '../../utils/jsx/Loading'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport req from '../../utils/req'\nimport host from '../../config'\nimport Moment from 'react-moment';\nimport CommentsBox from './CommentsBox'\n\nclass Comments extends React.Component {\n\n  _isMounted = false\n\n  state = {\n    isFetching: false,\n    comments: [],\n    page: 1,\n    display: true\n  }\n\n  addComment = (id) => {\n    this.setState({\n      page: 1,\n      comments: [],\n      display: true\n    }, () => {\n      this.fetchComments(id);\n    })\n  }\n\n  fetchComments = (id) => {\n    this.setState({...this.state, isFetching: true})\n    req(host + '/api/movies/' + id + '/messages.json?order[id]=DESC&page=' + this.state.page, {useToken: true})\n    .then(res => {\n        if (res.length) {\n          this.setState({\n            isFetching: false,\n            comments: [...this.state.comments, ...res]\n          })\n        }\n        else {\n          this.setState({\n            isFetching: false,\n            display: false\n          })\n        }\n        console.log(this.state.comments)\n    }).catch(err => {\n    })\n  }\n\n  componentWillMount() {\n    this.fetchComments(this.props.id)\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n    window.onscroll = () => {\n      if (this._isMounted === true) {\n        if (window.innerHeight + document.documentElement.scrollTop > document.documentElement.offsetHeight - 200) {\n          if (this.state.display) {\n            this.setState({\n              isFetching: false,\n              page: this.state.page + 1\n            })\n            this.fetchComments(this.props.id)\n          }\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  render() {\n    const { isFetching, comments } = this.state\n\n    return (\n      <div>\n        <CommentsBox id={this.props.id} addComment={this.addComment}/>\n        <Loading display={isFetching}/>\n        <List>\n        {comments.map(comment => {\n          return (\n            <ListItem key={comment.id}>\n              <ListItemAvatar>\n                <Avatar src={comment.owner.avatarUrl} />\n              </ListItemAvatar>\n              <ListItemText\n                  primary={comment.owner.username}\n                  secondary={comment.message}\n              >\n              </ListItemText>\n              {/* <Moment>{comment.}</Moment> */}\n            </ListItem>\n          )\n        })}\n        </List>\n      </div>\n    )\n  }\n}\n\nconst styles = theme => ({\n  img: {\n    borderRadius:'5px',\n    overflow:'hidden'\n  },\n  paper: {\n    background: theme.palette.secondary.dark,\n    height:'100%',\n    borderRadius: '5px',\n    padding:'15px 20px',\n    overflow:'hidden'\n  },\n  frame: {\n    margin: '0 -20px -19px -20px',\n    width: 'calc(100% + 40px)',\n    height: '20vw',\n    minHeight: '250px'\n  }\n})\nconst mapStateToProps = state => { return state }\nlet CommentsExport = Comments\nCommentsExport = withStyles(styles)(CommentsExport)\nCommentsExport = connect(mapStateToProps)(CommentsExport)\nexport default CommentsExport\n"]},"metadata":{},"sourceType":"module"}