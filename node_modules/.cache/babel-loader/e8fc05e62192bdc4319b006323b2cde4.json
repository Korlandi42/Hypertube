{"ast":null,"code":"import _classCallCheck from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/korlandi/42/hypertube/src/components/player/Player.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport host from '../../config';\n/**\n * Component takes 2 props =>\n *    onChange -> Method called to update video time in db.\n *    startTime -> Time in seconds where the video should start.\n *    mediaUrl -> Link of the video to read.\n *    movieId -> ID of the movie reading, in order to set subtitles.\n */\n\nvar Player =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Player, _Component);\n\n  function Player() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Player);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Player)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      oldTime: 0,\n      currentTime: 0\n    };\n    _this.enableEvent = false;\n    _this.player = null;\n\n    _this.componentDidMount = function () {\n      var startTime = _this.props.startTime;\n      _this.player = document.getElementById(\"player\");\n      if (_this.player.currentTime < startTime) _this.player.currentTime = startTime;\n      document.addEventListener('keydown', _this.handleKeyPress);\n    };\n\n    _this.handleTimeChange = function (e) {\n      _this.setState({\n        currentTime: e.target.currentTime\n      }, function () {\n        var _this$state = _this.state,\n            currentTime = _this$state.currentTime,\n            oldTime = _this$state.oldTime;\n\n        if (Math.abs(currentTime - oldTime) > 5 && _this.props.onChange) {\n          _this.setState({\n            oldTime: currentTime\n          });\n\n          _this.props.onChange(currentTime);\n        }\n      });\n    };\n\n    _this.handleKeyPress = function (e) {\n      var _assertThisInitialize = _assertThisInitialized(_assertThisInitialized(_this)),\n          player = _assertThisInitialize.player;\n\n      if (!_this.enableEvent || !_this.player) return;\n      var needsPrevent = true;\n\n      switch (e.key) {\n        case \" \":\n          player.paused ? player.play() : player.pause();\n          break;\n\n        case \"ArrowRight\":\n          player.currentTime += 10;\n          break;\n\n        case \"ArrowLeft\":\n          player.currentTime -= 10;\n          break;\n\n        case \"ArrowUp\":\n          player.volume > .9 ? player.volume = 1 : player.volume += .1;\n          break;\n\n        case \"ArrowDown\":\n          player.volume < .1 ? player.volume = 0 : player.volume -= .1;\n          break;\n\n        default:\n          needsPrevent = false;\n      }\n\n      if (needsPrevent) e.preventDefault();\n    };\n\n    return _this;\n  }\n\n  _createClass(Player, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var mediaUrl = this.props.mediaUrl;\n      if (!mediaUrl) return null;\n      return React.createElement(\"video\", {\n        id: \"player\",\n        controls: true,\n        onTimeUpdate: this.handleTimeChange,\n        onMouseEnter: function onMouseEnter() {\n          return _this2.enableEvent = true;\n        },\n        onMouseLeave: function onMouseLeave() {\n          return _this2.enableEvent = false;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"source\", {\n        src: mediaUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"track\", {\n        label: \"English\",\n        kind: \"subtitles\",\n        srcLang: \"en\",\n        src: host + \"/subtitles/\" + this.props.movieId + \"/eng.vtt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Player;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nexport default connect(mapStateToProps)(Player);","map":{"version":3,"sources":["/Users/korlandi/42/hypertube/src/components/player/Player.jsx"],"names":["React","Component","connect","host","Player","state","oldTime","currentTime","enableEvent","player","componentDidMount","startTime","props","document","getElementById","addEventListener","handleKeyPress","handleTimeChange","e","setState","target","Math","abs","onChange","needsPrevent","key","paused","play","pause","volume","preventDefault","mediaUrl","movieId","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport host from '../../config';\n\n/**\n * Component takes 2 props =>\n *    onChange -> Method called to update video time in db.\n *    startTime -> Time in seconds where the video should start.\n *    mediaUrl -> Link of the video to read.\n *    movieId -> ID of the movie reading, in order to set subtitles.\n */\nclass Player extends Component {\n\n  state = {\n    oldTime: 0,\n    currentTime: 0\n  }\n\n  enableEvent = false\n  player = null\n\n  componentDidMount = () => {\n    let { startTime } = this.props;\n    this.player = document.getElementById(\"player\");\n    if (this.player.currentTime < startTime)\n      this.player.currentTime = startTime;\n    document.addEventListener('keydown', this.handleKeyPress)\n  }\n\n  handleTimeChange = e => {\n    this.setState({\n      currentTime: e.target.currentTime,\n    }, () => {\n      let { currentTime, oldTime } = this.state;\n      if (Math.abs(currentTime - oldTime) > 5 && this.props.onChange) {\n        this.setState({ oldTime: currentTime });\n        this.props.onChange(currentTime);\n      }\n    })\n  }\n\n  handleKeyPress = e => {\n    const { player } = this\n    if (!this.enableEvent || !this.player) return;\n    let needsPrevent = true\n    switch (e.key) {\n      case \" \":\n        player.paused ? player.play() : player.pause()\n        break\n      case \"ArrowRight\":\n        player.currentTime += 10\n        break\n      case \"ArrowLeft\":\n        player.currentTime -= 10\n        break\n      case \"ArrowUp\":\n        player.volume > .9 ? player.volume = 1 : player.volume += .1\n        break\n      case \"ArrowDown\":\n        player.volume < .1 ? player.volume = 0 : player.volume -= .1\n        break\n      default:\n        needsPrevent = false\n    }\n    if (needsPrevent) e.preventDefault()\n  }\n\n  render() {\n    const { mediaUrl } = this.props\n    if (!mediaUrl) return null\n    return (\n      <video id=\"player\" controls\n          onTimeUpdate={this.handleTimeChange}\n          onMouseEnter={() => this.enableEvent = true}\n          onMouseLeave={() => this.enableEvent = false}>\n        <source src={mediaUrl} />\n        <track label=\"English\" kind=\"subtitles\" srcLang=\"en\" src={host + \"/subtitles/\" + this.props.movieId + \"/eng.vtt\"} />\n      </video>\n    );\n  }\n\n}\n\nconst mapStateToProps = state => { return state }\n\nexport default connect(mapStateToProps)(Player)\n"]},"metadata":{},"sourceType":"module"}