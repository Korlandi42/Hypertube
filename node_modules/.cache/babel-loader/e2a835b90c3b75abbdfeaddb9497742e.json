{"ast":null,"code":"import _objectSpread from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/korlandi/42/hypertube/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/korlandi/42/hypertube/src/components/movies/Movies.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport req from '../../utils/req';\nimport { Icon, IconButton, ListItem, ListItemText, ListItemSecondaryAction, List, ListItemAvatar, Avatar } from '@material-ui/core';\nimport host from '../../config';\nimport { Link } from 'react-router-dom';\nimport { blue } from '@material-ui/core/colors';\n\nvar Movies =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Movies, _Component);\n\n  function Movies() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Movies);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Movies)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this._isMounted = false;\n\n    _this.setStateCheck = function (state, callback) {\n      if (_this._isMounted === true) {\n        _this.setState(state, function () {\n          if (callback) callback();\n        });\n      }\n    };\n\n    _this.state = {\n      movies: []\n    };\n\n    _this.fetchMovies = function () {\n      var auth = _this.props.auth;\n      req(host + '/api/movie_statuses.json?&user.id=' + auth.user.id, {\n        useToken: true\n      }).then(function (res) {\n        console.log(res);\n\n        _this.setStateCheck(_objectSpread({}, _this.state, {\n          movies: res\n        }));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Movies, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this._isMounted = true;\n      this.fetchMovies();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var movies = this.state.movies;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        style: {\n          marginRight: '5px'\n        },\n        onClick: function onClick() {\n          return _this2.props.history.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"keyboard_arrow_left\")), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, movies.map(function (movie, i) {\n        return React.createElement(ListItem, {\n          divider: true,\n          key: movie.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(ListItemAvatar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          style: {\n            backgroundColor: blue[400],\n            color: '#fff'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"local_movies\"))), React.createElement(ListItemText, {\n          primary: movie.movie.name,\n          secondary: Math.round(movie.time / 60) + ' min',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }), React.createElement(ListItemSecondaryAction, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          color: \"primary\",\n          component: Link,\n          to: \"/stream/\" + movie.movie.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"play_circle_outline\"))));\n      })));\n    }\n  }]);\n\n  return Movies;\n}(Component);\n\nexport default connect(function (state) {\n  return state;\n})(Movies);","map":{"version":3,"sources":["/Users/korlandi/42/hypertube/src/components/movies/Movies.jsx"],"names":["React","Component","connect","req","Icon","IconButton","ListItem","ListItemText","ListItemSecondaryAction","List","ListItemAvatar","Avatar","host","Link","blue","Movies","_isMounted","setStateCheck","state","callback","setState","movies","fetchMovies","auth","props","user","id","useToken","then","res","console","log","marginRight","history","goBack","map","movie","i","backgroundColor","color","name","Math","round","time"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport req from '../../utils/req'\nimport { Icon, IconButton, ListItem, ListItemText, ListItemSecondaryAction, List, ListItemAvatar, Avatar } from '@material-ui/core'\nimport host from '../../config'\nimport { Link } from 'react-router-dom'\nimport { blue } from '@material-ui/core/colors'\n\nclass Movies extends Component {\n\n  _isMounted = false\n  setStateCheck = (state, callback) => {\n    if (this._isMounted === true) {\n      this.setState(state, () => {\n        if (callback) callback()\n      })\n    }\n  }\n\n  state = {\n    movies: []\n  }\n\n  fetchMovies = () => {\n    const { auth } = this.props\n    req(host + '/api/movie_statuses.json?&user.id=' + auth.user.id, {\n      useToken: true\n    }).then(res => {\n      console.log(res)\n      this.setStateCheck({\n        ...this.state,\n        movies: res\n      })\n    })\n  }\n\n  componentWillMount() {\n    this._isMounted = true\n    this.fetchMovies()\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  render() {\n    const { movies } = this.state\n    return (\n      <div>\n        <IconButton style={{marginRight:'5px'}} onClick={() => this.props.history.goBack()} >\n          <Icon color=\"primary\">keyboard_arrow_left</Icon>\n        </IconButton>\n        <List>\n          {movies.map((movie, i) => {\n            return (\n              <ListItem divider key={movie.id}>\n                <ListItemAvatar>\n                  <Avatar style={{backgroundColor: blue[400], color: '#fff'}}>\n                    <Icon>local_movies</Icon>\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={movie.movie.name}\n                  secondary={Math.round(movie.time / 60) + ' min'}\n                />\n                <ListItemSecondaryAction>\n                  <IconButton color=\"primary\" component={Link} to={\"/stream/\" + movie.movie.id}>\n                    <Icon>play_circle_outline</Icon>\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            )\n          })}\n        </List>\n      </div>\n    )\n  }\n\n}\n\nexport default connect(state => state)(Movies)\n"]},"metadata":{},"sourceType":"module"}