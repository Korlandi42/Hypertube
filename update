#!/bin/bash

usage() {
    echo -e 'USAGE:\n\t./update [OPTION]\n'
    echo -e 'OPTIONS:\n'
    echo -e '\t-p, --pull-and-run-prod'
}

pullAndRun() {
    echo -e "\n$(tput setaf 2)################################################################
#                                                              #
#                      PULL & RUN PROJECT                      #
#                                                              #
################################################################$(tput sgr 0)\n\n"

    echo -e "$(tput setaf 2)git add .$(tput sgr 0)"
    git add .

    echo -e "\n\n$(tput setaf 2)git commit -m \"commit from script\"$(tput sgr 0)"
    git commit -m "commit from script"

    echo -e "\n\n$(tput setaf 2)git pull$(tput sgr 0)"
    git pull

    echo -e "\n\n$(tput setaf 2)git push$(tput sgr 0)"
    git push

    echo -e "\n\n$(tput setaf 2)ssh -i hypertube.pem -t root@hypertube.barthonet.ovh git -C /var/www/hypertube/ pull$(tput sgr 0)"
    ssh -i hypertube.pem -t root@hypertube.barthonet.ovh git -C /var/www/hypertube/ pull

    echo -e "\n\n$(tput setaf 2)ssh -i hypertube.pem -t root@hypertube.barthonet.ovh npm run --prefix /var/www/hypertube/ build-prod$(tput sgr 0)"
    ssh -i hypertube.pem -t root@hypertube.barthonet.ovh npm run --prefix /var/www/hypertube/ build-prod
    ssh -i hypertube.pem -t root@hypertube.barthonet.ovh /var/www/hypertube/api/bin/console c:c
    ssh -i hypertube.pem -t root@hypertube.barthonet.ovh /var/www/hypertube/api/bin/console c:c --env=PROD
    ssh -i hypertube.pem -t root@hypertube.barthonet.ovh chown -R www-data: /var/www/

    echo -e "\n\n$(tput setaf 2)################################################################
#                                                              #
#                   PROJECT PULLED & COMPILED                  #
#                                                              #
################################################################$(tput sgr 0)\n\n"
}

runProject() {
    chmod 400 hypertube.pem
    tar --exclude='./node_modules' --exclude='./api/vendor' --exclude='./api/var' -czvf output.tar.gz .
    scp -i hypertube.pem ./output.tar.gz root@hypertube.barthonet.ovh:/opt/
    ssh -i hypertube.pem -t root@hypertube.barthonet.ovh rm -rf /var/www/hypertube/*
    ssh -i hypertube.pem -t root@hypertube.barthonet.ovh tar xvf /opt/output.tar.gz -C /var/www/hypertube/
    ssh -i hypertube.pem -t root@hypertube.barthonet.ovh npm i --prefix /var/www/hypertube/
    ssh -i hypertube.pem -t root@hypertube.barthonet.ovh composer install -d /var/www/hypertube/api/
    ssh -i hypertube.pem -t root@hypertube.barthonet.ovh npm run --prefix /var/www/hypertube/ build-prod
    ssh -i hypertube.pem -t root@hypertube.barthonet.ovh rm -rf /var/www/hypertube/api/config/jwt/
    ssh -i hypertube.pem -t root@hypertube.barthonet.ovh mkdir /var/www/hypertube/api/config/jwt/

    # Getting JWT_PASSPHRASE in order to create keys
    JWT_PASSPHRASE="`ssh -o LogLevel=QUIET -i hypertube.pem -t root@hypertube.barthonet.ovh "grep JWT_PASSPHRASE /var/www/hypertube/api/.env | cut -f2 -d '='"`"
    # Removing '\r' at the end of JWT_PASSPHRASE
    JWT_PASSPHRASE="${JWT_PASSPHRASE/$'\r'/}"

    ssh -i hypertube.pem -t root@hypertube.barthonet.ovh openssl genrsa -out /var/www/hypertube/api/config/jwt/private.pem -aes256 -passout pass:$JWT_PASSPHRASE 4096
    ssh -i hypertube.pem -t root@hypertube.barthonet.ovh openssl rsa -pubout -in /var/www/hypertube/api/config/jwt/private.pem -passin pass:$JWT_PASSPHRASE -out /var/www/hypertube/api/config/jwt/public.pem
    ssh -i hypertube.pem -t root@hypertube.barthonet.ovh chown -R www-data: /var/www/
    ssh -i hypertube.pem -t root@hypertube.barthonet.ovh chown -R www-data: /var/www/
    ssh -i hypertube.pem -t root@hypertube.barthonet.ovh rm -f /opt/output.tar.gz
    rm -f output.tar.gz
}

if [ $# -eq 1 ]; then
    case $1 in
        -p | --pull-and-run)
            pullAndRun
            ;;
        *)
            usage
            exit 1
            ;;
    esac
else
    runProject
    exit 0
fi